spring:
  datasource:
    url: jdbc:mysql://localhost:3306/order-service
    password: mysql
    username: order

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  application:
    name: Order-Service


    # Kafka Configuration

  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: NotificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: event:co.learning.practice.orderservice.event.OrderPlaceEvent

  # Distribution Tracing

  zipkin:
   base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0


server:
  port: 8081

#Eureka Client
eureka:
  client:
    register-with-eureka: true
    service-url:
      defaultZone: http://Gur:Singh@localhost:8766/eureka

# Circuit Breaker

management:
  health:
    circuit-breakers:
      enabled: true
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"

# Resilience 4J properties

resilience4j:
  circuit breaker:
    instances:
      inventory:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        sliding-window-type: count_based
        sliding-window-size: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true

#   Resilience 4J Timeout properties

  time-limiter:
    instances:
      inventory:
        timeout-duration: 50s

#   Resilience 4J Retry properties

  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s






